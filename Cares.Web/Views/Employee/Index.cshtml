
@Styles.Render("~/Content/PagedList.css")

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = @Cares.Web.Resources.Shared.Common.Product;
    ViewBag.Employee = Model.EmployeeList;
}


<p>
    @Html.ActionLink(@Cares.Web.Resources.Shared.Common.CreateNew, "Create")
</p>

@Html.Partial("~/Views/Shared/_ConfirmationDialog.cshtml")

@using (Ajax.BeginForm

            ("Index", "Employee",
            new AjaxOptions { HttpMethod = "Get", InsertionMode = InsertionMode.Replace, UpdateTargetId = "gridContent" }))
{
    <div id="search-area">
        <div>

            <p>
                @Cares.Web.Resources.Employees.Employee.EmployeeName @Html.TextBox("SearchString", "", new { @id = "searchInput",@class="ui-widget" })
                @Html.DropDownList("DepartmentId", new SelectList(@Model.Departments, "Id", "Name"), @Cares.Web.Resources.Employees.Employee.SelectDepartment, new { id = "ddlDepartments", @class = "dropdown" })
                
                <input type="submit" value=@Cares.Web.Resources.Shared.Common.Search />   <input type="button" id="reset" value=@Cares.Web.Resources.Shared.Common.Reset />
            </p>

        </div>
    </div>
    <br />
    <div id="grid-area">
        @Html.Partial("_Employee", Model)
    </div>

}
@if (ViewBag.MessageVM != null)
{
    <input type="hidden" id="Message" value="@ViewBag.MessageVM.Message" />
    <input type="hidden" id="IsSaved" value="@ViewBag.MessageVM.IsSaved" />
    <input type="hidden" id="IsUpdated" value="@ViewBag.MessageVM.IsUpdated" />
    <input type="hidden" id="IsError" value="@ViewBag.MessageVM.IsError" />
}

@section scripts
{
    <script src="~/Scripts/Common/confirmationDialog.js"></script>
    <script src="~/Scripts/App/product.js"></script>
}
<script src="/Scripts/jquery-ui-1.11.0.min.js"></script>
<link rel="stylesheet" href="/Content/jquery-ui-1.11.0.min.css" />
<script>
    $(document).ready(function() {
        debugger
        var employees = @Html.Raw(Json.Encode(ViewBag.Employee))

        $("#searchInput").autocomplete({
            source: function (req, response) {
                var re = $.ui.autocomplete.escapeRegex(req.term);
                var matcher = new RegExp("^" + re, "i");
                response($.grep(employees, function (item) {
                    return matcher.test(item.label=item.Name);
                }));
            },
            minLength: 1
        });
    });
</script>