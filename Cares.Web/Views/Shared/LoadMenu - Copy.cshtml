@using Cares.Models.DomainModels
@model Cares.Web.ViewModels.Common.MenuViewModel
@{
    Layout = null;
}
@{
    Layout = null;
}
<ul class="nav navbar-nav">
    @{
        if (Model.MenuRights != null)
        {
            // loop through menu headers one by one and populate childs
            foreach (MenuRight header in Model.MenuHeaders.ToList())
            {
                <li class="dropdown">
                    <a href="@header.Menu.MenuTargetController/@header.Menu.MenuFunction" class="dropdown-toggle" data-toggle="dropdown">@header.Menu.MenuTitle <span class="caret"></span></a>
                    <ul class="dropdown-menu" role="menu">

                        @{
                            // get child items with respect to menu header
                            IList<MenuRight> menuRightchildList = Model.MenuRights.Where(menuright => menuright.Menu.ParentItem != null &&
                                menuright.Menu.ParentItem.MenuId == header.Menu.MenuId).ToList();
                            foreach (MenuRight menuRight in menuRightchildList)
                            {
                                // display childs
                                <li>
                                    @Html.ActionLink(menuRight.Menu.MenuTitle, menuRight.Menu.MenuFunction, menuRight.Menu.MenuTargetController)
                                </li>
                            }
                        }
                    </ul>
                </li>
            }
        }
    }
</ul>
